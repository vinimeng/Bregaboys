/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;


import dao.CategoriaSalarioDAO;
import dao.EnderecoDAO;
import dao.FuncionarioDAO;
import dao.SecaoDAO;
import excecoes.CampoVazioException;
import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;
import util.Hash;
import vo.CategoriaSalarioVO;
import vo.EnderecoVO;
import vo.FuncionarioVO;
import vo.SecaoVO;

/**
 *
 * @author Vinicius Meng
 */
public class CadastraFuncionario extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 3754844300139240761L;
	private String senha, nome, email, pais, estado, cidade, bairro, rua, telefone;
    private int codigoFuncionario, codigoEndereco, nroCasa, secao, categoriaSalario, gerente;
    private EnderecoDAO e;
    private FuncionarioDAO f;
    
    @SuppressWarnings("unchecked")
	public CadastraFuncionario() {
        initComponents();
         this.setLocationRelativeTo(null);
        e = new EnderecoDAO();
        f = new FuncionarioDAO();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JanelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível definir o look and feel do Windows!\nClassNotFoundException", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (InstantiationException ex) {
            Logger.getLogger(JanelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível definir o look and feel do Windows!\nInstantiationException", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(JanelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível definir o look and feel do Windows!\nIllegalAccessException", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(JanelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível definir o look and feel do Windows!\nUnsupportedLookAndFeelException", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        this.comboCatSal.setModel(this.catCombo());
        this.comboGerente.setModel(this.gerenteCombo());
        this.comboSecao.setModel(this.secCombo());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "rawtypes" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelCadastrar = new javax.swing.JPanel();
        labelCodigo = new javax.swing.JLabel();
        labelCodigoGerado = new javax.swing.JLabel();
        butGerar = new javax.swing.JButton();
        labelNome = new javax.swing.JLabel();
        textNome = new javax.swing.JTextField();
        textEmail = new javax.swing.JTextField();
        labelTelefone = new javax.swing.JLabel();
        textDDD = new javax.swing.JTextField();
        textPDigito = new javax.swing.JTextField();
        textUDigito = new javax.swing.JTextField();
        butCadastrar = new javax.swing.JButton();
        butLimpar = new javax.swing.JButton();
        labelEmail = new javax.swing.JLabel();
        labelSenha = new javax.swing.JLabel();
        labelTraco = new javax.swing.JLabel();
        labelPais = new javax.swing.JLabel();
        textPais = new javax.swing.JTextField();
        labelEstado = new javax.swing.JLabel();
        comboEstado = new javax.swing.JComboBox();
        labelCidade = new javax.swing.JLabel();
        textCidade = new javax.swing.JTextField();
        labelBairro = new javax.swing.JLabel();
        textBairro = new javax.swing.JTextField();
        labelRua = new javax.swing.JLabel();
        textRua = new javax.swing.JTextField();
        labelNroCasa = new javax.swing.JLabel();
        textNroCasa = new javax.swing.JTextField();
        textSenha = new javax.swing.JPasswordField();
        comboGerente = new javax.swing.JComboBox();
        comboCatSal = new javax.swing.JComboBox();
        comboSecao = new javax.swing.JComboBox();
        labelSecao = new javax.swing.JLabel();
        labelCatSal = new javax.swing.JLabel();
        labelGerente = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        labelCodigo.setText("Código:");

        butGerar.setText("Gerar");
        butGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butGerarActionPerformed(evt);
            }
        });

        labelNome.setText("Nome:");

        textNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textNomeKeyTyped(evt);
            }
        });

        labelTelefone.setText("Telefone:");

        textDDD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textDDDKeyTyped(evt);
            }
        });

        textPDigito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textPDigitoKeyTyped(evt);
            }
        });

        textUDigito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textUDigitoKeyTyped(evt);
            }
        });

        butCadastrar.setText("Cadastrar");
        butCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCadastrarActionPerformed(evt);
            }
        });

        butLimpar.setText("Limpar");
        butLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butLimparActionPerformed(evt);
            }
        });

        labelEmail.setText("Email:");

        labelSenha.setText("Senha:");

        labelTraco.setText("-");

        labelPais.setText("País:");

        textPais.setText("Brasil");
        textPais.setEnabled(false);
        textPais.setFocusable(false);

        labelEstado.setText("Estado:");

        comboEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Acre", "Alagoas", "Amapá", "Amazonas", "Bahia", "Ceará", "Distrito Federal", "Espírito Santo", "Goiás", "Maranhão", "Mato Grosso", "Mato Grosso do Sul", "Minas Gerais", "Pará", "Paraíba", "Paraná", "Pernambuco", "Piauí", "Rio de Janeiro", "Rio Grande do Norte", "Rio Grande do Sul", "Rondônia", "Roraima", "Santa Catarina", "São Paulo", "Sergipe", "Tocantins" }));

        labelCidade.setText("Cidade:");

        labelBairro.setText("Bairro:");

        labelRua.setText("Rua:");

        labelNroCasa.setText("Número da Casa:");

        textNroCasa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textNroCasaKeyTyped(evt);
            }
        });

        labelSecao.setText("Seção:");

        labelCatSal.setText("Categoria Salário:");

        labelGerente.setText("Gerente:");

        javax.swing.GroupLayout painelCadastrarLayout = new javax.swing.GroupLayout(painelCadastrar);
        painelCadastrar.setLayout(painelCadastrarLayout);
        painelCadastrarLayout.setHorizontalGroup(
            painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastrarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCadastrarLayout.createSequentialGroup()
                        .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelCadastrarLayout.createSequentialGroup()
                                .addComponent(labelNroCasa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textNroCasa, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelCadastrarLayout.createSequentialGroup()
                                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelSenha)
                                    .addComponent(labelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelCadastrarLayout.createSequentialGroup()
                                        .addComponent(labelCodigoGerado, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(butGerar))
                                    .addComponent(textSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(painelCadastrarLayout.createSequentialGroup()
                                .addComponent(labelEmail)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelCadastrarLayout.createSequentialGroup()
                                .addComponent(labelCatSal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboCatSal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelCadastrarLayout.createSequentialGroup()
                                .addComponent(labelGerente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboGerente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(painelCadastrarLayout.createSequentialGroup()
                                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelPais, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(painelCadastrarLayout.createSequentialGroup()
                                        .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labelSecao)
                                            .addComponent(labelEstado))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(comboSecao, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(textPais, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelCadastrarLayout.createSequentialGroup()
                                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelCidade)
                                    .addComponent(labelBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textBairro, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textCidade)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelCadastrarLayout.createSequentialGroup()
                                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelRua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textRua)))
                        .addGap(5, 5, 5))
                    .addGroup(painelCadastrarLayout.createSequentialGroup()
                        .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(butLimpar)
                            .addGroup(painelCadastrarLayout.createSequentialGroup()
                                .addComponent(labelTelefone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textDDD, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textPDigito, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCadastrarLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelTraco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textUDigito, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCadastrarLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(butCadastrar)
                                .addContainerGap())))))
        );
        painelCadastrarLayout.setVerticalGroup(
            painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastrarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCodigoGerado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butGerar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboSecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSecao, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCatSal, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCatSal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelGerente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboGerente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPais, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelRua, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNroCasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNroCasa, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPDigito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTraco)
                    .addComponent(textUDigito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butLimpar)
                    .addComponent(butCadastrar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butGerarActionPerformed
        try {
            int codigo = f.codigoFuncionarioMax() + 1;
            this.labelCodigoGerado.setText("" + codigo);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CadastraCliente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível gerar o código!\nClassNotFoundException", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(CadastraCliente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível gerar o código!\nSQLException", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_butGerarActionPerformed

    private void textNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNomeKeyTyped
        String caracteres = "0987654321";
        if(caracteres.contains(evt.getKeyChar() + "")){
            evt.consume();
        }
    }//GEN-LAST:event_textNomeKeyTyped

    private void textDDDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDDDKeyTyped
        String caracteres = "0987654321";
        if(!caracteres.contains(evt.getKeyChar() + "") || this.textDDD.getText().length() >= 2){
            evt.consume();
        }
        if(this.textDDD.getText().length() >= 1){
            this.textPDigito.requestFocus();
        }
    }//GEN-LAST:event_textDDDKeyTyped

    private void textPDigitoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textPDigitoKeyTyped
        String caracteres = "0987654321";
        if(!caracteres.contains(evt.getKeyChar() + "") || this.textPDigito.getText().length() >= 4){
            evt.consume();
        }
        if(this.textPDigito.getText().length() >= 3){
            this.textUDigito.requestFocus();
        }
    }//GEN-LAST:event_textPDigitoKeyTyped

    private void textUDigitoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textUDigitoKeyTyped
        String caracteres = "0987654321";
        if(!caracteres.contains(evt.getKeyChar() + "") || this.textUDigito.getText().length() >= 4){
            evt.consume();
        }
    }//GEN-LAST:event_textUDigitoKeyTyped

    private void butCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCadastrarActionPerformed
        try {
            this.preencheCampo();
            EnderecoVO eVo = new EnderecoVO(bairro, cidade, codigoEndereco, estado, nroCasa, pais, rua);
            FuncionarioVO fVo = new FuncionarioVO(categoriaSalario, codigoEndereco, codigoFuncionario, gerente, secao, senha, email, nome, telefone);
            e.criarEndereco(eVo);
            f.criarFuncionario(fVo);
            JOptionPane.showMessageDialog(null, "O funcionário foi cadastrado com sucesso!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (CampoVazioException ex) {
            Logger.getLogger(CadastraCliente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            this.limparCampos();
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(CadastraCliente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível cadastrar o funcionário!\nNoSuchAlgorithmException", "Erro", JOptionPane.ERROR_MESSAGE);
            this.limparCampos();
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(CadastraCliente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível cadastrar o funcionário!\nUnsupportedEncodingException", "Erro", JOptionPane.ERROR_MESSAGE);
            this.limparCampos();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CadastraCliente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível cadastrar o funcionário!\nClassNotFoundException", "Erro", JOptionPane.ERROR_MESSAGE);
            this.limparCampos();
        } catch (SQLException ex) {
            Logger.getLogger(CadastraCliente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível cadastrar o funcionário!\nSQLException", "Erro", JOptionPane.ERROR_MESSAGE);
            this.limparCampos();
        }
    }//GEN-LAST:event_butCadastrarActionPerformed

    private void butLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butLimparActionPerformed
        this.limparCampos();
    }//GEN-LAST:event_butLimparActionPerformed

    private void textNroCasaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNroCasaKeyTyped
        String caracteres = "0987654321";
        if(!caracteres.contains(evt.getKeyChar() + "")){
            evt.consume();
        }
    }//GEN-LAST:event_textNroCasaKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butCadastrar;
    private javax.swing.JButton butGerar;
    private javax.swing.JButton butLimpar;
    @SuppressWarnings("rawtypes")
	private javax.swing.JComboBox comboCatSal;
    @SuppressWarnings("rawtypes")
	private javax.swing.JComboBox comboEstado;
    @SuppressWarnings("rawtypes")
	private javax.swing.JComboBox comboGerente;
    @SuppressWarnings("rawtypes")
	private javax.swing.JComboBox comboSecao;
    private javax.swing.JLabel labelBairro;
    private javax.swing.JLabel labelCatSal;
    private javax.swing.JLabel labelCidade;
    private javax.swing.JLabel labelCodigo;
    private javax.swing.JLabel labelCodigoGerado;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelEstado;
    private javax.swing.JLabel labelGerente;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelNroCasa;
    private javax.swing.JLabel labelPais;
    private javax.swing.JLabel labelRua;
    private javax.swing.JLabel labelSecao;
    private javax.swing.JLabel labelSenha;
    private javax.swing.JLabel labelTelefone;
    private javax.swing.JLabel labelTraco;
    private javax.swing.JPanel painelCadastrar;
    private javax.swing.JTextField textBairro;
    private javax.swing.JTextField textCidade;
    private javax.swing.JTextField textDDD;
    private javax.swing.JTextField textEmail;
    private javax.swing.JTextField textNome;
    private javax.swing.JTextField textNroCasa;
    private javax.swing.JTextField textPDigito;
    private javax.swing.JTextField textPais;
    private javax.swing.JTextField textRua;
    private javax.swing.JPasswordField textSenha;
    private javax.swing.JTextField textUDigito;
    // End of variables declaration//GEN-END:variables
    
    private void limparCampos(){
        this.labelCodigoGerado.setText("");
        this.textBairro.setText("");
        this.textCidade.setText("");
        this.textDDD.setText("");
        this.textEmail.setText("");
        this.textNome.setText("");
        this.textNroCasa.setText("");
        this.textPDigito.setText("");
        this.textRua.setText("");
        this.textSenha.setText("");
        this.textUDigito.setText("");
    }
    
    private void preencheCampo() throws CampoVazioException, NoSuchAlgorithmException, UnsupportedEncodingException, ClassNotFoundException, SQLException {
        if(this.labelCodigoGerado.getText().equals("")
                || this.textNome.getText().equals("")
                || this.textEmail.getText().equals("")
                || this.textPais.getText().equals("")
                || this.textCidade.getText().equals("")
                || this.textBairro.getText().equals("")
                || this.textRua.getText().equals("")
                || this.textNroCasa.getText().equals("")
                || this.textDDD.getText().equals("")
                || this.textPDigito.getText().equals("")
                || this.textUDigito.getText().equals("")
                || String.valueOf(this.textSenha.getPassword()).equals("")){
            throw new CampoVazioException();
        }
        else{
            codigoFuncionario = Integer.parseInt(this.labelCodigoGerado.getText());
            nome = this.textNome.getText();
            email = this.textEmail.getText();
            pais = this.textPais.getText();
            String[] s = ((String)this.comboSecao.getSelectedItem()).split(" ");
            secao = Integer.parseInt(s[0]);
            s = ((String)this.comboGerente.getSelectedItem()).split(" ");
            gerente = Integer.parseInt(s[0]);
            s = ((String)this.comboCatSal.getSelectedItem()).split(" ");
            categoriaSalario = Integer.parseInt(s[0]);
            estado = (String) this.comboEstado.getSelectedItem();
            cidade = this.textCidade.getText();
            bairro = this.textBairro.getText();
            rua = this.textRua.getText();
            nroCasa = Integer.parseInt(this.textNroCasa.getText());
            telefone = this.textDDD.getText() + " " + this.textPDigito.getText() + "-" + this.textUDigito.getText();
            senha = Hash.hashingSenha(String.valueOf(this.textSenha.getPassword()));
            codigoEndereco = e.codigoEnderecoMax() + 1;
        }
    }
    
    @SuppressWarnings({ "rawtypes", "unchecked" })
	private DefaultComboBoxModel catCombo(){
        CategoriaSalarioDAO cDao = new CategoriaSalarioDAO();
        DefaultComboBoxModel ret;
        ArrayList <CategoriaSalarioVO> lista = null;
        Object [] es = null;
        try {
            lista = cDao.buscarCategoriaSalarioAll();
            es = new Object [lista.size()];
            for(int j = 0; j < lista.size(); j++){
                es[j] = (String)(lista.get(j).getCodigoCategoriaSalario()+ " - " + ("R$ " + lista.get(j).getValorCategoriaSalario() + "0").replace(".", ","));
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(CadastraFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
        ret = new DefaultComboBoxModel(es);
        return ret; 
    }
    
    @SuppressWarnings({ "rawtypes", "unchecked" })
	private DefaultComboBoxModel secCombo(){
        SecaoDAO sDao = new SecaoDAO();
        DefaultComboBoxModel ret;
        ArrayList <SecaoVO> lista = null;
        Object [] es = null;
        try {
            lista = sDao.buscarSecaoAll();
            es = new Object [lista.size()];
            for(int j = 0; j < lista.size(); j++){
                es[j] = (String)(lista.get(j).getCodigoSecao() + " - " + lista.get(j).getNomeSecao());
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(CadastraFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
        ret = new DefaultComboBoxModel(es);
        return ret; 
    }
    
    @SuppressWarnings({ "rawtypes", "unchecked" })
	private DefaultComboBoxModel gerenteCombo(){
        FuncionarioDAO gDao = new FuncionarioDAO();
        DefaultComboBoxModel ret;
        ArrayList <FuncionarioVO> lista = null;
        Object [] es = null;
        try {
            lista = gDao.buscarFuncionarioAll();
            ArrayList <String> gerente = new ArrayList<String>();
            for(int i = 0; i < lista.size(); i++){
                if(lista.get(i).getCodigoFuncionario() == lista.get(i).getCodigoGerente()){
                    gerente.add(lista.get(i).getCodigoFuncionario() + " - " + lista.get(i).getNomeFuncionario());
                }
            }
            es = new Object [gerente.size()];
            for(int j = 0; j < gerente.size(); j++){
                es[j] = gerente.get(j);
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(CadastraFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
        ret = new DefaultComboBoxModel(es);
        return ret; 
    }
}
