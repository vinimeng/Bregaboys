/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import dao.*;
import java.sql.SQLException;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import util.ModeloTabela;
import vo.*;

/**
 *
 * @author 05200120
 */
public class JanelaGerente extends javax.swing.JFrame {

    private int quale;
    private TableRowSorter <ModeloTabela> trs;
    
    /**
     * Creates new form GerenciamentoCliente
     */
    public JanelaGerente(FuncionarioVO fVo) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.trs = null;
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JanelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível definir o look and feel do Windows!\nClassNotFoundException", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (InstantiationException ex) {
            Logger.getLogger(JanelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível definir o look and feel do Windows!\nInstantiationException", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(JanelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível definir o look and feel do Windows!\nIllegalAccessException", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(JanelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível definir o look and feel do Windows!\nUnsupportedLookAndFeelException", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        this.labGerenteNome.setText("Olá " + fVo.getNomeFuncionario() + ", seja bem-vindo!");
        this.painelPrincipal.setVisible(true);
        this.painelGerenciamento.setVisible(false);
        //this.botaoDeletar.setVisible(false);
        //this.campoFiltrar.setVisible(false);
        //this.jLabel1.setVisible(false);
        //this.jLabel2.setVisible(false);
        //this.opcao0.setVisible(false);
        //this.opcao1.setVisible(false);
        //this.opcao2.setVisible(false);
        //this.opcao3.setVisible(false);
        //this.opcao4.setVisible(false);
        this.jLayeredPane.moveToFront(this.painelPrincipal);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botoesFiltrar = new javax.swing.ButtonGroup();
        jLayeredPane = new javax.swing.JLayeredPane();
        painelPrincipal = new javax.swing.JPanel();
        gerenciarCliente = new javax.swing.JButton();
        gerenciarFuncionario = new javax.swing.JButton();
        gerenciarProduto = new javax.swing.JButton();
        gerenciarTransportadora = new javax.swing.JButton();
        gerenciarCategoriaSalario = new javax.swing.JButton();
        gerenciarFornecedor = new javax.swing.JButton();
        gerenciarSecao = new javax.swing.JButton();
        butSalvar = new javax.swing.JButton();
        labGerenteNome = new javax.swing.JLabel();
        iconCliente = new javax.swing.JLabel();
        iconFunc = new javax.swing.JLabel();
        iconTrans = new javax.swing.JLabel();
        iconCategoria = new javax.swing.JLabel();
        iconForn = new javax.swing.JLabel();
        iconSec = new javax.swing.JLabel();
        iconProd = new javax.swing.JLabel();
        painelGerenciamento = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDados = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        campoFiltrar = new javax.swing.JTextField();
        opcao0 = new javax.swing.JRadioButton();
        opcao1 = new javax.swing.JRadioButton();
        opcao2 = new javax.swing.JRadioButton();
        opcao3 = new javax.swing.JRadioButton();
        opcao4 = new javax.swing.JRadioButton();
        botaoDeletar = new javax.swing.JButton();
        detalhes = new javax.swing.JButton();
        botaoSair = new javax.swing.JButton();
        inserir = new javax.swing.JButton();
        butgGerenciar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciamento Bregaboys");
        setPreferredSize(new java.awt.Dimension(667, 483));

        painelPrincipal.setPreferredSize(new java.awt.Dimension(640, 470));

        gerenciarCliente.setText("Cliente");
        gerenciarCliente.setMaximumSize(new java.awt.Dimension(117, 25));
        gerenciarCliente.setMinimumSize(new java.awt.Dimension(117, 25));
        gerenciarCliente.setPreferredSize(new java.awt.Dimension(117, 25));
        gerenciarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciarClienteActionPerformed(evt);
            }
        });

        gerenciarFuncionario.setText("Funcionário");
        gerenciarFuncionario.setMaximumSize(new java.awt.Dimension(117, 25));
        gerenciarFuncionario.setMinimumSize(new java.awt.Dimension(117, 25));
        gerenciarFuncionario.setPreferredSize(new java.awt.Dimension(117, 25));
        gerenciarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciarFuncionarioActionPerformed(evt);
            }
        });

        gerenciarProduto.setText("Produto");
        gerenciarProduto.setMaximumSize(new java.awt.Dimension(117, 25));
        gerenciarProduto.setMinimumSize(new java.awt.Dimension(117, 25));
        gerenciarProduto.setPreferredSize(new java.awt.Dimension(117, 25));
        gerenciarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciarProdutoActionPerformed(evt);
            }
        });

        gerenciarTransportadora.setText("Transportadora");
        gerenciarTransportadora.setMaximumSize(new java.awt.Dimension(117, 25));
        gerenciarTransportadora.setMinimumSize(new java.awt.Dimension(117, 25));
        gerenciarTransportadora.setPreferredSize(new java.awt.Dimension(117, 25));
        gerenciarTransportadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciarTransportadoraActionPerformed(evt);
            }
        });

        gerenciarCategoriaSalario.setText("Categoria Salarial");
        gerenciarCategoriaSalario.setMaximumSize(new java.awt.Dimension(117, 25));
        gerenciarCategoriaSalario.setMinimumSize(new java.awt.Dimension(117, 25));
        gerenciarCategoriaSalario.setPreferredSize(new java.awt.Dimension(117, 25));
        gerenciarCategoriaSalario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciarCategoriaSalarioActionPerformed(evt);
            }
        });

        gerenciarFornecedor.setText("Fornecedor");
        gerenciarFornecedor.setMaximumSize(new java.awt.Dimension(117, 25));
        gerenciarFornecedor.setMinimumSize(new java.awt.Dimension(117, 25));
        gerenciarFornecedor.setPreferredSize(new java.awt.Dimension(117, 25));
        gerenciarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciarFornecedorActionPerformed(evt);
            }
        });

        gerenciarSecao.setText("Seção");
        gerenciarSecao.setMaximumSize(new java.awt.Dimension(117, 25));
        gerenciarSecao.setMinimumSize(new java.awt.Dimension(117, 25));
        gerenciarSecao.setPreferredSize(new java.awt.Dimension(117, 25));
        gerenciarSecao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciarSecaoActionPerformed(evt);
            }
        });

        butSalvar.setText("Sair");
        butSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSalvarActionPerformed(evt);
            }
        });

        iconCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cliente.png"))); // NOI18N

        iconFunc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/funcionario.png"))); // NOI18N

        iconTrans.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/transportadora.png"))); // NOI18N

        iconCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/categoriasalario.png"))); // NOI18N

        iconForn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/fornecedor.png"))); // NOI18N

        iconSec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/secao.png"))); // NOI18N

        iconProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/produto.png"))); // NOI18N

        javax.swing.GroupLayout painelPrincipalLayout = new javax.swing.GroupLayout(painelPrincipal);
        painelPrincipal.setLayout(painelPrincipalLayout);
        painelPrincipalLayout.setHorizontalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelPrincipalLayout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(gerenciarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelPrincipalLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(iconCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)))
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelPrincipalLayout.createSequentialGroup()
                                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(iconFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(gerenciarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(42, 42, 42)
                                .addComponent(iconProd, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelPrincipalLayout.createSequentialGroup()
                                .addGap(216, 216, 216)
                                .addComponent(gerenciarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(butSalvar)))
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addComponent(labGerenteNome, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelPrincipalLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(iconTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addComponent(iconCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)
                                .addComponent(iconForn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelPrincipalLayout.createSequentialGroup()
                                .addComponent(gerenciarTransportadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(gerenciarCategoriaSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(gerenciarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelPrincipalLayout.createSequentialGroup()
                                .addComponent(iconSec, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelPrincipalLayout.createSequentialGroup()
                                .addComponent(gerenciarSecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))))))
        );
        painelPrincipalLayout.setVerticalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labGerenteNome, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconFunc)
                    .addComponent(iconCliente)
                    .addComponent(iconProd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gerenciarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gerenciarFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gerenciarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconCategoria)
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addComponent(iconTrans)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gerenciarTransportadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gerenciarCategoriaSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addComponent(iconForn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gerenciarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addComponent(iconSec, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gerenciarSecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(butSalvar)
                .addGap(49, 49, 49))
        );

        jLabel1.setText("Filtrar Clientes:");

        tabelaDados.setModel(new ModeloTabela());
        jScrollPane1.setViewportView(tabelaDados);

        jLabel2.setText("Filtrar Por:");

        campoFiltrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoFiltrarKeyReleased(evt);
            }
        });

        botoesFiltrar.add(opcao0);
        opcao0.setSelected(true);
        opcao0.setText("Nome");

        botoesFiltrar.add(opcao1);
        opcao1.setText("Código");
        opcao1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcao1ActionPerformed(evt);
            }
        });

        botoesFiltrar.add(opcao2);
        opcao2.setText("E-Mail");

        botoesFiltrar.add(opcao3);
        opcao3.setText("Telefone");

        botoesFiltrar.add(opcao4);
        opcao4.setText("Seção");

        botaoDeletar.setText("Deletar");
        botaoDeletar.setMaximumSize(new java.awt.Dimension(75, 23));
        botaoDeletar.setMinimumSize(new java.awt.Dimension(75, 23));
        botaoDeletar.setPreferredSize(new java.awt.Dimension(75, 23));
        botaoDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDeletarActionPerformed(evt);
            }
        });

        detalhes.setText("Alterar");
        detalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detalhesActionPerformed(evt);
            }
        });

        botaoSair.setText("Voltar");
        botaoSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSairActionPerformed(evt);
            }
        });

        inserir.setText("Inserir");
        inserir.setMaximumSize(new java.awt.Dimension(75, 23));
        inserir.setMinimumSize(new java.awt.Dimension(75, 23));
        inserir.setPreferredSize(new java.awt.Dimension(75, 23));
        inserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirActionPerformed(evt);
            }
        });

        butgGerenciar.setText("Gerenciar Imagens");
        butgGerenciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butgGerenciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelGerenciamentoLayout = new javax.swing.GroupLayout(painelGerenciamento);
        painelGerenciamento.setLayout(painelGerenciamentoLayout);
        painelGerenciamentoLayout.setHorizontalGroup(
            painelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelGerenciamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelGerenciamentoLayout.createSequentialGroup()
                        .addGroup(painelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelGerenciamentoLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoFiltrar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(opcao0, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(opcao1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(opcao2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(opcao3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(opcao4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaoDeletar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inserir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(detalhes, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(painelGerenciamentoLayout.createSequentialGroup()
                        .addComponent(botaoSair)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butgGerenciar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelGerenciamentoLayout.setVerticalGroup(
            painelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelGerenciamentoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(campoFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelGerenciamentoLayout.createSequentialGroup()
                        .addComponent(opcao0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(opcao1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(opcao2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(opcao3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(opcao4)
                        .addGap(18, 18, 18)
                        .addComponent(botaoDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inserir, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(detalhes, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelGerenciamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoSair)
                    .addComponent(butgGerenciar))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout jLayeredPaneLayout = new javax.swing.GroupLayout(jLayeredPane);
        jLayeredPane.setLayout(jLayeredPaneLayout);
        jLayeredPaneLayout.setHorizontalGroup(
            jLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneLayout.createSequentialGroup()
                .addComponent(painelGerenciamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
        );
        jLayeredPaneLayout.setVerticalGroup(
            jLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneLayout.createSequentialGroup()
                .addGroup(jLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(painelGerenciamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(painelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jLayeredPane.setLayer(painelPrincipal, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane.setLayer(painelGerenciamento, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void opcao1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcao1ActionPerformed
        
    }//GEN-LAST:event_opcao1ActionPerformed

    private void botaoDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDeletarActionPerformed
        try {
            if(tabelaDados.getSelectedRow() != -1){
                if(this.jLabel1.getText().split(" ")[1].contains("Cl")){
                    try {
                        new CompraProdutoDAO().excluirCompraProdutoC(new CompraDAO().buscarCompraCli(new ClienteDAO().buscarCliente(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0))).getCodigoCliente()).getCodigoCompra());
                        new CompraDAO().excluirCompraCli(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        new ClienteDAO().excluirCliente(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        JOptionPane.showMessageDialog(this, "Cliente deletado!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException ex) {
                        new ClienteDAO().excluirCliente(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        JOptionPane.showMessageDialog(this, "Cliente deletado!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                else if(this.jLabel1.getText().split(" ")[1].contains("Fu")){
                    try {
                        new FuncionarioDAO().excluirFuncionario(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        new EnderecoDAO().excluirEndereco(new FuncionarioDAO().buscarFuncionario(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0))).getCodigoEndereco());                    
                        JOptionPane.showMessageDialog(this, "Funcionário deletado!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException ex) {
                        new FuncionarioDAO().excluirFuncionario(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        JOptionPane.showMessageDialog(this, "Funcionário deletado!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                else if(this.jLabel1.getText().split(" ")[1].contains("Pr")){
                    try {
                        new CompraProdutoDAO().excluirCompraProdutoP(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        new ProdutoDAO().excluirProduto(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        JOptionPane.showMessageDialog(this, "Produto deletado!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException ex) {
                        new ProdutoDAO().excluirProduto(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        JOptionPane.showMessageDialog(this, "Produto deletado!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                else if(this.jLabel1.getText().split(" ")[1].contains("Tr")){  
                    try {
                        new CompraDAO().excluirCompraT(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        new TransportadoraDAO().excluirTransportadora(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        new EnderecoDAO().excluirEndereco(new TransportadoraDAO().buscarTransportadora(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0))).getCodigoEndereco());
                        JOptionPane.showMessageDialog(this, "Transportadora deletada!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException ex) {
                        new TransportadoraDAO().excluirTransportadora(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        JOptionPane.showMessageDialog(this, "Transportadora deletada!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    }
                    
                }
                else if(this.jLabel1.getText().split(" ")[1].contains("Ca")){
                    try {
                        new FuncionarioDAO().alterarFuncionarioCS(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        new CategoriaSalarioDAO().excluirCategoriaSalario(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        JOptionPane.showMessageDialog(this, "Categoria de salário deletada!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException ex) {
                        new CategoriaSalarioDAO().excluirCategoriaSalario(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        JOptionPane.showMessageDialog(this, "Categoria de salário deletada!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                else if(this.jLabel1.getText().split(" ")[1].contains("Fo")){
                    try {    
                        new ProdutoDAO().excluirProdutoF(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        new FornecedorDAO().excluirFornecedor(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        new EnderecoDAO().excluirEndereco(new FornecedorDAO().buscarFornecedor(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0))).getCodigoEndereco());
                        JOptionPane.showMessageDialog(this, "Fornecedor deletado!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException ex) {
                        new FornecedorDAO().excluirFornecedor(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        JOptionPane.showMessageDialog(this, "Fornecedor deletado!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    }
                }   
                else if(this.jLabel1.getText().split(" ")[1].contains("Se")){
                    try {    
                        new ProdutoDAO().alterarProdutoS(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        new FuncionarioDAO().alterarFuncionarioS(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        new SecaoDAO().excluirSecao(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        JOptionPane.showMessageDialog(this, "Seção deletada!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException ex) {
                        new SecaoDAO().excluirSecao(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)));
                        JOptionPane.showMessageDialog(this, "Seção deletada!", "Confirmação", JOptionPane.INFORMATION_MESSAGE);
                    }
                    }
            }
        }
        catch (ClassNotFoundException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Não foi possivel recuperar os detalhes. ClassNotFoundException.");
        } catch (SQLException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botaoDeletarActionPerformed

    private void detalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detalhesActionPerformed
        try {
            if(tabelaDados.getSelectedRow() != -1){
                if(this.jLabel1.getText().split(" ")[1].contains("Cl"))
                    new DetalhesGerenciamento(new ClienteDAO().buscarCliente(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)))).setVisible(true);
                else if(this.jLabel1.getText().split(" ")[1].contains("Fu"))
                    new DetalhesGerenciamento(new FuncionarioDAO().buscarFuncionario(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)))).setVisible(true);
                else if(this.jLabel1.getText().split(" ")[1].contains("Pr"))
                    new DetalhesGerenciamento(new ProdutoDAO().buscarProduto(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)))).setVisible(true);
                else if(this.jLabel1.getText().split(" ")[1].contains("Tr"))
                    new DetalhesGerenciamento(new TransportadoraDAO().buscarTransportadora(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)))).setVisible(true);
                else if(this.jLabel1.getText().split(" ")[1].contains("Ca"))
                    new DetalhesGerenciamento(new CategoriaSalarioDAO().buscarCategoriaSalario(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)))).setVisible(true);
                else if(this.jLabel1.getText().split(" ")[1].contains("Fo"))
                    new DetalhesGerenciamento(new FornecedorDAO().buscarFornecedor(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)))).setVisible(true);
                else if(this.jLabel1.getText().split(" ")[1].contains("Se"))
                    new DetalhesGerenciamento(new SecaoDAO().buscarSecao(Integer.parseInt((String) this.tabelaDados.getValueAt(this.tabelaDados.getSelectedRow(), 0)))).setVisible(true);
                
            }
        }
        catch (SQLException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Não foi possivel recuperar os detalhes. SQLException.");
        }
        catch (ClassNotFoundException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Não foi possivel recuperar os detalhes. ClassNotFoundException.");
        }
    }//GEN-LAST:event_detalhesActionPerformed

    private void gerenciarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciarClienteActionPerformed
        try{
            this.trs = null;
            List<ClienteVO> lista = new ClienteDAO().buscarClienteAll();
            Object [] tituloColunas = {"Código", "Nome", "E-mail", "Telefone"};
            Object[][] s = new Object[lista.size()][4];
            for (int i = 0; i < lista.size(); i++) {
                s[i][0]= lista.get(i).getCodigoCliente() + "";
                s[i][1]= lista.get(i).getNomeCliente();
                s[i][2]= lista.get(i).getEmailCliente();
                s[i][3]= lista.get(i).getTelefoneCliente();
            }
            ModeloTabela d = new ModeloTabela(s,tituloColunas);
            this.tabelaDados.setModel(d);
            this.trs = new TableRowSorter(d);
            this.tabelaDados.setRowSorter(trs);
            this.opcao0.setText("Nome");this.opcao0.setVisible(true);
            this.opcao1.setText("Código");this.opcao1.setVisible(true);
            this.opcao2.setText("E-Mail");this.opcao2.setVisible(true);
            this.opcao3.setText("Telefone");this.opcao3.setVisible(true);
            this.opcao4.setText("");this.opcao4.setVisible(false);
            this.jLabel1.setText("Filtrar Clientes:");
            this.butgGerenciar.setVisible(false);
            this.painelPrincipal.setVisible(false);
            this.painelGerenciamento.setVisible(true);
            this.jLayeredPane.moveToFront(this.painelGerenciamento);
        } catch (SQLException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados dos clientes!\nSQLException");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados dos clientes!\nClassNotFoundException");
        }
    }//GEN-LAST:event_gerenciarClienteActionPerformed

    private void gerenciarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciarFuncionarioActionPerformed
        try{
            this.trs = null;
            List<FuncionarioVO> lista = new FuncionarioDAO().buscarFuncionarioAll();
            Object [] tituloColunas = {"Código", "Nome", "E-mail", "Telefone", "Seção"};
            Object[][] s = new Object[lista.size()][5];
            for (int i = 0; i < lista.size(); i++) {
                s[i][0]= lista.get(i).getCodigoFuncionario()+"";
                s[i][1]= lista.get(i).getNomeFuncionario();
                s[i][2]= lista.get(i).getEmailFuncionario();
                s[i][3]= lista.get(i).getTelefoneFuncionario();
                s[i][4]= new SecaoDAO().buscarSecao(lista.get(i).getCodigoSecao()).getNomeSecao();
            }
            ModeloTabela d = new ModeloTabela(s,tituloColunas);
            this.tabelaDados.setModel(d);
            this.trs = new TableRowSorter(d);
            this.tabelaDados.setRowSorter(trs);
            this.opcao0.setText("Nome");this.opcao0.setVisible(true);
            this.opcao1.setText("Código");this.opcao1.setVisible(true);
            this.opcao2.setText("E-Mail");this.opcao2.setVisible(true);
            this.opcao3.setText("Telefone");this.opcao3.setVisible(true);
            this.opcao4.setText("Seção");this.opcao4.setVisible(true);
            this.jLabel1.setText("Filtrar Funcionários:");
            this.butgGerenciar.setVisible(false);
            this.painelPrincipal.setVisible(false);
            this.painelGerenciamento.setVisible(true);
            this.jLayeredPane.moveToFront(this.painelGerenciamento);
        } catch (SQLException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados dos funcionarios!\nSQLException");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados dos funcionarios!\nClassNotFoundException");
        }
    }//GEN-LAST:event_gerenciarFuncionarioActionPerformed

    private void gerenciarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciarProdutoActionPerformed
        try{
            this.trs = null;
            List<ProdutoVO> lista = new ProdutoDAO().buscarProdutoAll();
            Object [] tituloColunas = {"Código", "Nome", "Valor Unitário", "Seção", "Fornecedor", "Código Imagem"};
            Object[][] s = new Object[lista.size()][6];
            for (int i = 0; i < lista.size(); i++) {
                s[i][0]= lista.get(i).getCodigoProduto()+"";
                s[i][1]= lista.get(i).getNomeProduto();
                s[i][2]= ("R$ " + lista.get(i).getValorUnitario() + "0").replace(".",",");
                s[i][3]= new SecaoDAO().buscarSecao(lista.get(i).getCodigoSecao()).getNomeSecao();
                s[i][4]= new FornecedorDAO().buscarFornecedor(lista.get(i).getCodigoFornecedor()).getNomeFornecedor();
                s[i][5]= lista.get(i).getCodigoImagem()+"";
            }
            ModeloTabela d = new ModeloTabela(s,tituloColunas);
            this.tabelaDados.setModel(d);
            this.trs = new TableRowSorter(d);
            this.tabelaDados.setRowSorter(trs);
            this.opcao0.setText("Nome");this.opcao0.setVisible(true);
            this.opcao1.setText("Código");this.opcao1.setVisible(true);
            this.opcao2.setText("Valor Unitário");this.opcao2.setVisible(true);
            this.opcao3.setText("Seção");this.opcao3.setVisible(true);
            this.opcao4.setText("Fornecedor");this.opcao4.setVisible(true);
            this.jLabel1.setText("Filtrar Produtos:");
            this.painelPrincipal.setVisible(false);
            this.painelGerenciamento.setVisible(true);
            this.jLayeredPane.moveToFront(this.painelGerenciamento);
        } catch (SQLException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados dos produtos!\nSQLException");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados dos produtos!\nClassNotFoundException");
        }
    }//GEN-LAST:event_gerenciarProdutoActionPerformed

    private void gerenciarTransportadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciarTransportadoraActionPerformed
        try{
            this.trs = null;
            List<TransportadoraVO> lista = new TransportadoraDAO().buscarTransportadoraAll();
            Object [] tituloColunas = {"Código", "Nome", "E-Mail", "Telefone"};
            Object[][] s = new Object[lista.size()][4];
            for (int i = 0; i < lista.size(); i++) {
                s[i][0]= lista.get(i).getCodigoTransportadora()+"";
                s[i][1]= lista.get(i).getNomeTransportadora();
                s[i][2]= lista.get(i).getEmailTransportadora();
                s[i][3]= lista.get(i).getTelefoneTransportadora();
            }
            ModeloTabela d = new ModeloTabela(s,tituloColunas);
            this.tabelaDados.setModel(d);
            this.trs = new TableRowSorter(d);
            this.tabelaDados.setRowSorter(trs);
            this.opcao0.setText("Nome");this.opcao0.setVisible(true);
            this.opcao1.setText("Código");this.opcao1.setVisible(true);
            this.opcao2.setText("E-Mail");this.opcao2.setVisible(true);
            this.opcao3.setText("Telefone");this.opcao3.setVisible(true);
            this.opcao4.setText("");this.opcao4.setVisible(false);
            this.jLabel1.setText("Filtrar Transportadoras:");
            this.butgGerenciar.setVisible(false);
            this.painelPrincipal.setVisible(false);
            this.painelGerenciamento.setVisible(true);
            this.jLayeredPane.moveToFront(this.painelGerenciamento);
        } catch (SQLException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados das transportadoras!\nSQLException");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados das transportadoras!\nClassNotFoundException");
        }
    }//GEN-LAST:event_gerenciarTransportadoraActionPerformed

    private void gerenciarCategoriaSalarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciarCategoriaSalarioActionPerformed
        try{
            this.trs = null;
            List<CategoriaSalarioVO> lista = new CategoriaSalarioDAO().buscarCategoriaSalarioAll();
            Object [] tituloColunas = {"Código", "Salário"};
            Object[][] s = new Object[lista.size()][2];
            for (int i = 0; i < lista.size(); i++) {
                s[i][0]= lista.get(i).getCodigoCategoriaSalario()+"";
                s[i][1]= ("R$ " + lista.get(i).getValorCategoriaSalario() + "0").replace(".", ",");
            }
            ModeloTabela d = new ModeloTabela(s,tituloColunas);
            this.tabelaDados.setModel(d);
            this.trs = new TableRowSorter(d);
            this.tabelaDados.setRowSorter(trs);
            this.opcao0.setText("Salário ");this.opcao0.setVisible(true);
            this.opcao1.setText("Código");this.opcao1.setVisible(true);
            this.opcao2.setText("");this.opcao2.setVisible(false);
            this.opcao3.setText("");this.opcao3.setVisible(false);
            this.opcao4.setText("");this.opcao4.setVisible(false);
            this.jLabel1.setText("Filtrar Categorias:");
            this.butgGerenciar.setVisible(false);
            this.painelPrincipal.setVisible(false);
            this.painelGerenciamento.setVisible(true);
            this.jLayeredPane.moveToFront(this.painelGerenciamento);
        } catch (SQLException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados das categorias salariais!\nSQLException");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados das categorias salariais!\nClassNotFoundException");
        }
    }//GEN-LAST:event_gerenciarCategoriaSalarioActionPerformed

    private void gerenciarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciarFornecedorActionPerformed
        try{
            this.trs = null;
            List<FornecedorVO> lista = new FornecedorDAO().buscarFornecedorAll();
            Object [] tituloColunas = {"Código", "Nome", "E-Mail", "Telefone"};
            Object[][] s = new Object[lista.size()][4];
            for (int i = 0; i < lista.size(); i++) {
                s[i][0]= lista.get(i).getCodigoFornecedor()+"";
                s[i][1]= lista.get(i).getNomeFornecedor();
                s[i][2]= lista.get(i).getEmailFornecedor();
                s[i][3]= lista.get(i).getTelefoneFornecedor();
            }
            ModeloTabela d = new ModeloTabela(s,tituloColunas);
            this.tabelaDados.setModel(d);
            this.trs = new TableRowSorter(d);
            this.tabelaDados.setRowSorter(trs);
            this.opcao0.setText("Nome");this.opcao0.setVisible(true);
            this.opcao1.setText("Código");this.opcao1.setVisible(true);
            this.opcao2.setText("E-Mail");this.opcao2.setVisible(true);
            this.opcao3.setText("Telefone");this.opcao3.setVisible(true);
            this.opcao4.setText("");this.opcao4.setVisible(false);
            this.jLabel1.setText("Filtrar Fornecedores:");
            this.butgGerenciar.setVisible(false);
            this.painelPrincipal.setVisible(false);
            this.painelGerenciamento.setVisible(true);
            this.jLayeredPane.moveToFront(this.painelGerenciamento);
        } catch (SQLException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados dos fornecedores!\nSQLException");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados dos fornecedores!\nClassNotFoundException");
        }
    }//GEN-LAST:event_gerenciarFornecedorActionPerformed

    private void gerenciarSecaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciarSecaoActionPerformed
        try{
            this.trs = null;
            List<SecaoVO> lista = new SecaoDAO().buscarSecaoAll();
            Object [] tituloColunas = {"Código", "Nome"};
            Object[][] s = new Object[lista.size()][2];
            for (int i = 0; i < lista.size(); i++) {
                s[i][0]= lista.get(i).getCodigoSecao()+"";
                s[i][1]= lista.get(i).getNomeSecao();
            }
            ModeloTabela d = new ModeloTabela(s,tituloColunas);
            this.tabelaDados.setModel(d);
            this.trs = new TableRowSorter(d);
            this.tabelaDados.setRowSorter(trs);
            this.opcao0.setText("Nome");this.opcao0.setVisible(true);
            this.opcao1.setText("Código");this.opcao1.setVisible(true);
            this.opcao2.setText("");this.opcao2.setVisible(false);
            this.opcao3.setText("");this.opcao3.setVisible(false);
            this.opcao4.setText("");this.opcao4.setVisible(false);
            this.jLabel1.setText("Filtrar Seções:");
            this.butgGerenciar.setVisible(false);
            this.painelPrincipal.setVisible(false);
            this.painelGerenciamento.setVisible(true);
            this.jLayeredPane.moveToFront(this.painelGerenciamento);
        } catch (SQLException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados das seções!\nSQLException");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JanelaGerente.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro ao tentar resgatar os dados das seções!\nClassNotFoundException");
        }
    }//GEN-LAST:event_gerenciarSecaoActionPerformed

    private void botaoSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSairActionPerformed
        this.painelPrincipal.setVisible(true);
        this.painelGerenciamento.setVisible(false);
        this.jLayeredPane.moveToFront(this.painelPrincipal);
        this.tabelaDados.setModel(new ModeloTabela());
    }//GEN-LAST:event_botaoSairActionPerformed

    private void inserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserirActionPerformed
        try {
                if(this.jLabel1.getText().split(" ")[1].contains("Cl"))
                    new CadastraCliente().setVisible(true);
                else if(this.jLabel1.getText().split(" ")[1].contains("Fu"))
                    new CadastraFuncionario().setVisible(true);
                else if(this.jLabel1.getText().split(" ")[1].contains("Pr"))
                    new CadastraProduto().setVisible(true);
                else if(this.jLabel1.getText().split(" ")[1].contains("Tr"))
                    new CadastraTransportadora().setVisible(true);
                else if(this.jLabel1.getText().split(" ")[1].contains("Ca"))
                    new CadastraCategoriaSalario().setVisible(true);
                else if(this.jLabel1.getText().split(" ")[1].contains("Fo"))
                    new CadastraFornecedor().setVisible(true);
                else if(this.jLabel1.getText().split(" ")[1].contains("Se"))
                    new CadastraSecao().setVisible(true);
        
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Não foi possivel recuperar os detalhes.");
        }
    }//GEN-LAST:event_inserirActionPerformed

    private void butSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSalvarActionPerformed
        JanelaPrincipal jp = new JanelaPrincipal();
        jp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_butSalvarActionPerformed

    private void campoFiltrarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoFiltrarKeyReleased
        RowFilter<DefaultTableModel, Object> regexFilter = RowFilter.regexFilter(this.campoFiltrar.getText() + "", this.getFiltro());
        this.trs.setRowFilter(regexFilter);
    }//GEN-LAST:event_campoFiltrarKeyReleased

    private void butgGerenciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butgGerenciarActionPerformed
        new GerenciaImg().setVisible(true);
    }//GEN-LAST:event_butgGerenciarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoDeletar;
    private javax.swing.JButton botaoSair;
    private javax.swing.ButtonGroup botoesFiltrar;
    private javax.swing.JButton butSalvar;
    private javax.swing.JButton butgGerenciar;
    private javax.swing.JTextField campoFiltrar;
    private javax.swing.JButton detalhes;
    private javax.swing.JButton gerenciarCategoriaSalario;
    private javax.swing.JButton gerenciarCliente;
    private javax.swing.JButton gerenciarFornecedor;
    private javax.swing.JButton gerenciarFuncionario;
    private javax.swing.JButton gerenciarProduto;
    private javax.swing.JButton gerenciarSecao;
    private javax.swing.JButton gerenciarTransportadora;
    private javax.swing.JLabel iconCategoria;
    private javax.swing.JLabel iconCliente;
    private javax.swing.JLabel iconForn;
    private javax.swing.JLabel iconFunc;
    private javax.swing.JLabel iconProd;
    private javax.swing.JLabel iconSec;
    private javax.swing.JLabel iconTrans;
    private javax.swing.JButton inserir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labGerenteNome;
    private javax.swing.JRadioButton opcao0;
    private javax.swing.JRadioButton opcao1;
    private javax.swing.JRadioButton opcao2;
    private javax.swing.JRadioButton opcao3;
    private javax.swing.JRadioButton opcao4;
    private javax.swing.JPanel painelGerenciamento;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JTable tabelaDados;
    // End of variables declaration//GEN-END:variables


    private int getFiltro() {
        if(this.opcao1.isSelected())return 0;
        if(this.opcao0.isSelected())return 1;
        if(this.opcao2.isSelected())return 2;
        if(this.opcao3.isSelected())return 3;
        else return 4;
    }

}
